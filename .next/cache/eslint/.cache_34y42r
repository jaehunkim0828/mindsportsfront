[{"/Users/kimjaehun/Documents/rest/bock/front/app/layout.js":"1","/Users/kimjaehun/Documents/rest/bock/front/app/page.js":"2","/Users/kimjaehun/Documents/rest/bock/front/app/post/[id]/page.jsx":"3","/Users/kimjaehun/Documents/rest/bock/front/app/post/page.jsx":"4","/Users/kimjaehun/Documents/rest/bock/front/app/write/page.jsx":"5","/Users/kimjaehun/Documents/rest/bock/front/components/footer.jsx":"6","/Users/kimjaehun/Documents/rest/bock/front/components/header.jsx":"7","/Users/kimjaehun/Documents/rest/bock/front/components/postList.jsx":"8"},{"size":578,"mtime":1686582288256,"results":"9","hashOfConfig":"10"},{"size":5460,"mtime":1686491258530,"results":"11","hashOfConfig":"10"},{"size":5485,"mtime":1686580504992,"results":"12","hashOfConfig":"10"},{"size":2278,"mtime":1686580946924,"results":"13","hashOfConfig":"10"},{"size":2851,"mtime":1686580514244,"results":"14","hashOfConfig":"10"},{"size":509,"mtime":1686472304836,"results":"15","hashOfConfig":"10"},{"size":658,"mtime":1686574420319,"results":"16","hashOfConfig":"10"},{"size":69,"mtime":1686457807917,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yb0nq1",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimjaehun/Documents/rest/bock/front/app/layout.js",[],[],"/Users/kimjaehun/Documents/rest/bock/front/app/page.js",[],["43"],"/Users/kimjaehun/Documents/rest/bock/front/app/post/[id]/page.jsx",["44"],["45","46","47","48"],"/* eslint-disable @next/next/no-img-element */\n\"use client\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport style from \"./page.module.scss\";\nimport dayjs from \"dayjs\";\n\nexport default function TodayPage({ params: { id } }) {\n  const [post, setPost] = useState({});\n  const [check, setCheck] = useState(false);\n  const [comment, setComment] = useState([]);\n  const [commend, setCommend] = useState({\n    up: 0,\n    down: 0,\n  });\n\n  const [view, setView] = useState(0);\n\n  const [form, setForm] = useState({\n    nick: \"\",\n    content: \"\",\n  });\n\n  const handleReaction = async (id, recommend, deprecated, type) => {\n    if (check) {\n      return window.alert(\"이미 추천 되었습니다.\");\n    }\n    await axios.put(`${process.env.NEXT_PUBLIC_URL}/post/id?id=${id}`, {\n      recommend,\n      deprecated,\n    });\n    if (type === \"up\") {\n      setCommend({ ...commend, up: recommend });\n    } else {\n      setCommend({ ...commend, down: deprecated });\n    }\n    setCheck(true);\n  };\n\n  const handleForm = (type, e) => {\n    setForm(prev => ({\n      ...prev,\n      [type]: e.target.value,\n    }));\n  };\n\n  const submitCommnet = async () => {\n    if (!form.nick) {\n      return window.alert(\"닉네임을 적어주세요\");\n    }\n\n    if (!form.content) {\n      return window.alert(\"내용을 적어주세요.\");\n    }\n\n    const result = await axios\n      .post(`${process.env.NEXT_PUBLIC_URL}/comment`, {\n        id,\n        nick: form.nick,\n        content: form.content,\n      })\n      .then(raw => raw.data);\n    setComment(prev => [...prev, result.data]);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const result = await axios\n        .get(`${process.env.NEXT_PUBLIC_URL}/post/id?id=${id}`)\n        .then(raw => raw.data);\n      setPost(result.data);\n      setCommend({\n        up: result.data.recommend,\n        down: result.data.deprecated,\n      });\n      const result2 = await axios\n        .get(`${process.env.NEXT_PUBLIC_URL}/comment/postId?id=${id}`)\n        .then(raw => raw.data);\n      setComment(result2.data);\n\n      await axios\n        .put(`${process.env.NEXT_PUBLIC_URL}/post/id?id=${id}`, {\n          view: result.data.view + 1,\n        })\n        .then(_ => setView(result.data.view + 1));\n    })();\n  }, []);\n\n  return (\n    <div className={style.postContainer}>\n      <div className={style.postWrapper}>\n        <div className={style.title}>\n          {post.img && (\n            <img\n              src={`${process.env.NEXT_PUBLIC_URL}/${post.img}.png`}\n              alt=\"smile\"\n            />\n          )}\n          <div className={style.info}>{post.title}</div>\n          <div className={style.sub}>\n            <div className={style.first}>\n              <div>{post.nick}</div>\n              <div>{dayjs(post.createdAt).format(\"MM.DD.YYYY\")}</div>\n            </div>\n            <div className={style.last}>\n              조회: <strong>{view}</strong>\n            </div>\n          </div>\n        </div>\n        <div className={style.body}>\n          <div className={style.content}>\n            {post.content?.split(\"\\n\").map((line, i) => (\n              <span key={`content: ${i}`}>\n                {line}\n                <br />\n              </span>\n            ))}\n          </div>\n          <div className={style.reaction}>\n            <div\n              onClick={() =>\n                handleReaction(\n                  post.id,\n                  post.recommend + 1,\n                  post.deprecated,\n                  \"up\"\n                )\n              }\n              className={style.row}\n            >\n              추천{commend.up}\n              <img src=\"/recommend.png\" alt=\"img\" />\n            </div>\n            <div\n              onClick={() =>\n                handleReaction(\n                  post.id,\n                  post.recommend,\n                  post.deprecated + 1,\n                  \"down\"\n                )\n              }\n              className={style.row}\n            >\n              <img src=\"/noRecommend.png\" alt=\"img\" />\n              비추천{commend.down}\n            </div>\n          </div>\n        </div>\n        <div className={style.commentList}>\n          <div className={style.count}>댓글 ({comment.length})</div>\n          <div className={style.comments}>\n            {comment.map((ele, i) => (\n              <div key={`comment: ${i}`} className={style.comment}>\n                <div className={style.who}>\n                  <div className={style.first}>\n                    <img src=\"/recommend.png\" alt=\"img\" />\n                    <div>{ele.nick}</div>\n                    <div className={style.created}>\n                      {\" \"}\n                      {dayjs(ele.createdAt).format(\"MM.DD.YYYY HH:mm\")}\n                    </div>\n                  </div>\n                </div>\n                <div className={style.content}>{ele.content}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className={style.send}>\n          <div className={style.intro}>댓글 쓰기</div>\n          <div className={style.name}>\n            닉네임:{\" \"}\n            <input value={form.nick} onChange={e => handleForm(\"nick\", e)} />\n          </div>\n          <div className={style.form}>\n            <textarea\n              value={form.content}\n              onChange={e => handleForm(\"content\", e)}\n            />\n            <button onClick={submitCommnet}>등록</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kimjaehun/Documents/rest/bock/front/app/post/page.jsx",[],["49"],"/Users/kimjaehun/Documents/rest/bock/front/app/write/page.jsx",[],["50","51"],"/Users/kimjaehun/Documents/rest/bock/front/components/footer.jsx",[],["52"],"/Users/kimjaehun/Documents/rest/bock/front/components/header.jsx",[],["53"],"/Users/kimjaehun/Documents/rest/bock/front/components/postList.jsx",[],[],{"ruleId":"54","severity":1,"message":"55","line":52,"column":11,"nodeType":"56","endLine":52,"endColumn":48,"suppressions":"57"},{"ruleId":"58","severity":1,"message":"59","line":87,"column":6,"nodeType":"60","endLine":87,"endColumn":8,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"55","line":94,"column":13,"nodeType":"56","endLine":97,"endColumn":15,"suppressions":"62"},{"ruleId":"54","severity":1,"message":"55","line":132,"column":15,"nodeType":"56","endLine":132,"endColumn":53,"suppressions":"63"},{"ruleId":"54","severity":1,"message":"55","line":145,"column":15,"nodeType":"56","endLine":145,"endColumn":55,"suppressions":"64"},{"ruleId":"54","severity":1,"message":"55","line":157,"column":21,"nodeType":"56","endLine":157,"endColumn":59,"suppressions":"65"},{"ruleId":"54","severity":1,"message":"55","line":38,"column":9,"nodeType":"56","endLine":38,"endColumn":47,"suppressions":"66"},{"ruleId":"54","severity":1,"message":"55","line":48,"column":19,"nodeType":"56","endLine":48,"endColumn":58,"suppressions":"67"},{"ruleId":"54","severity":1,"message":"55","line":50,"column":19,"nodeType":"56","endLine":50,"endColumn":55,"suppressions":"68"},{"ruleId":"54","severity":1,"message":"55","line":7,"column":7,"nodeType":"56","endLine":7,"endColumn":41,"suppressions":"69"},{"ruleId":"54","severity":1,"message":"55","line":15,"column":9,"nodeType":"56","endLine":20,"endColumn":11,"suppressions":"70"},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["72"],["73"],["74"],["75"],["76"],["77"],["78"],["79"],["80"],["81"],{"kind":"82","justification":"83"},{"desc":"84","fix":"85"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},"directive","","Update the dependencies array to be: [id]",{"range":"86","text":"87"},[2215,2217],"[id]"]